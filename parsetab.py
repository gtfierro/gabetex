
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'x\x07t\x1e\x9a\xc5\x13PoJ\x8d\xe2\xcac\x001'
    
_lr_action_items = {'RPAREN':([1,2,5,6,8,14,15,16,17,18,19,],[-7,-8,-9,-10,14,-11,-5,-6,-4,-2,-3,]),'DIVIDE':([1,2,5,6,7,8,14,15,16,17,18,19,],[-7,-8,-9,-10,9,9,-11,-5,-6,-4,-2,-3,]),'POWER':([1,2,5,6,7,8,14,15,16,17,18,19,],[-7,-8,-9,-10,10,10,-11,-5,-6,-4,-2,-3,]),'NUMBER':([0,3,9,10,11,12,13,],[2,2,2,2,2,2,2,]),'TIMES':([1,2,5,6,7,8,14,15,16,17,18,19,],[-7,-8,-9,-10,11,11,-11,-5,-6,-4,-2,-3,]),'PLUS':([1,2,5,6,7,8,14,15,16,17,18,19,],[-7,-8,-9,-10,12,12,-11,-5,-6,-4,-2,-3,]),'LPAREN':([0,3,9,10,11,12,13,],[3,3,3,3,3,3,3,]),'VARIABLE':([0,3,9,10,11,12,13,],[5,5,5,5,5,5,5,]),'LINE':([0,3,9,10,11,12,13,],[6,6,6,6,6,6,6,]),'MINUS':([1,2,5,6,7,8,14,15,16,17,18,19,],[-7,-8,-9,-10,13,13,-11,-5,-6,-4,-2,-3,]),'$end':([1,2,4,5,6,7,14,15,16,17,18,19,],[-7,-8,0,-9,-10,-1,-11,-5,-6,-4,-2,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,9,10,11,12,13,],[1,1,15,16,17,18,19,]),'expression':([0,3,],[7,8,]),'statement':([0,],[4,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','yacc.py',8),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','yacc.py',13),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','yacc.py',14),
  ('expression -> expression TIMES term','expression',3,'p_expression_binop','yacc.py',15),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_binop','yacc.py',16),
  ('expression -> expression POWER term','expression',3,'p_expression_binop','yacc.py',17),
  ('expression -> term','expression',1,'p_expression_binop','yacc.py',18),
  ('term -> NUMBER','term',1,'p_term','yacc.py',28),
  ('term -> VARIABLE','term',1,'p_term','yacc.py',29),
  ('term -> LINE','term',1,'p_term','yacc.py',30),
  ('term -> LPAREN expression RPAREN','term',3,'p_term','yacc.py',31),
]
